During the past year of taking an intro to C programming class, and during this trimester, source code management would have been an extremely useful tool to have. For example, for the shopping list program and the address book program. I used to trust the undo arrows on code blocks until they proved their uselessness in the shopping list "delete item" option. I struggled with this a lot, but eventually I got to a point where the items were deleted up to the selected item number- not just one single item. After figuring out what my next move to fix this issue was, I reached another point that would delete the item, but would duplicate the item after it. I tried to go back to the point where it would delete everything up to it( I figured I was closer to figuring out the solution at that point) but the undo arrows did not undo to the point that I wanted it to. I got very frustrated because I couldnâ€™t go back to the code I had before, and now I not only had to figure out the solution, but I also had to figure out the code I had written before. After this undo arrow situation happened, I always copied and pasted my code onto a word document or took a picture of it before making any major changes. But going back between the word document/ cell phone pictures to code blocks was very annoying. In this situation, source code management would have been extremely useful. I could have easily gone to a point before the change was made, or to after a change was made. 
	For me, git would also be useful when I was using eclipse to write code. I never knew how to actually work with eclipse, and every time I tried to create a new project, my code would not run. I ended up only having the first project I ever made, and just adding a new assignment to it every time. This made it bad for me because sometimes when I pressed run, it would run one of the previous programs instead of the one I wanted it to run. It was also bad because every assignment was all cramped into one project and made it difficult to search through them all.
	In these cases, features I would have used include the commits, and the move and rename files. The commits feature would have been very useful for the shopping list program because it would allow me to look between each change that I made. It would also be very beneficial for this program because the commit is technically not final until it's committed to the master tree branch. If I had git while doing this program, I would have had an easier time (and a much shorter time) finding a solution. The rename and move files feature would be very useful for my time using eclipse. Since I never titled my assignments based on what actually needed to be done like "prime_Factors", "hello_world" etc, the rename feature would be good to eventually rename all of the assignments. This would then make it easier to navigate through them all, rather than opening every assignment to find which one I was actually looking for. The moving files feature would also be beneficial, for the fact that everything was placed into one main project instead of one project for each assignment.
